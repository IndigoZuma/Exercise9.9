public class Exercise09_09 {
    public static void main(String[] args) {
        // Create three RegularPolygon objects as specified
        RegularPolygon polygon1 = new RegularPolygon();
        RegularPolygon polygon2 = new RegularPolygon(6, 4);
        RegularPolygon polygon3 = new RegularPolygon(10, 4, 5.6, 7.8);
        
        // Display perimeter and area for each object
        System.out.println("Polygon 1:");
        System.out.println("Perimeter: " + polygon1.getPerimeter());
        System.out.println("Area: " + polygon1.getArea());
        System.out.println();
        
        System.out.println("Polygon 2:");
        System.out.println("Perimeter: " + polygon2.getPerimeter());
        System.out.println("Area: " + polygon2.getArea());
        System.out.println();
        
        System.out.println("Polygon 3:");
        System.out.println("Perimeter: " + polygon3.getPerimeter());
        System.out.println("Area: " + polygon3.getArea());
    }
}

class RegularPolygon {
    // Private data fields with default values as specified
    private int n = 3;
    private double side = 1;
    private double x = 0;
    private double y = 0;
    
    // No-arg constructor that creates a regular polygon with default values
    public RegularPolygon() {
    }
    
    // Constructor that creates a regular polygon with specified number of sides 
    // and length of side, centered at (0, 0)
    public RegularPolygon(int n, double side) {
        this.n = n;
        this.side = side;
    }
    
    // Constructor that creates a regular polygon with specified number of sides,
    // length of side, and x- and y-coordinates
    public RegularPolygon(int n, double side, double x, double y) {
        this.n = n;
        this.side = side;
        this.x = x;
        this.y = y;
    }
    
    // Accessor methods for all data fields
    public int getN() {
        return n;
    }
    
    public double getSide() {
        return side;
    }
    
    public double getX() {
        return x;
    }
    
    public double getY() {
        return y;
    }
    
    // Mutator methods for all data fields
    public void setN(int n) {
        this.n = n;
    }
    
    public void setSide(double side) {
        this.side = side;
    }
    
    public void setX(double x) {
        this.x = x;
    }
    
    public void setY(double y) {
        this.y = y;
    }
    
    // Method that returns the perimeter of the polygon
    public double getPerimeter() {
        return n * side;
    }
    
    // Method that returns the area of the polygon using the specified formula
    // Area = (n × s²) / (4 × tan(π/n))
    public double getArea() {
        return (n * side * side) / (4.0 * Math.tan(Math.PI / n));
    }
}
